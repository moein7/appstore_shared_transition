{"version":3,"sources":["Gesture.ts"],"names":["Animated","State","GestureState","runDecay","Clock","Value","add","block","cond","divide","eq","greaterThan","lessThan","multiply","set","stopClock","sub","preserveOffset","value","state","previous","offset","BEGAN","decay","velocity","decayedValue","clock","rerunDecaying","END","limit","min","max","offsetValue","preserveMultiplicativeOffset"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\n\nimport { runDecay } from \"./AnimationRunners\";\n\nconst {\n  Clock,\n  Value,\n  add,\n  block,\n  cond,\n  divide,\n  eq,\n  greaterThan,\n  lessThan,\n  multiply,\n  set,\n  stopClock,\n  sub,\n} = Animated;\n\ntype Node = ReturnType<typeof add>;\ntype Adaptable<T> = Node | T;\n\nexport const preserveOffset = (\n  value: Adaptable<number>,\n  state: GestureState,\n) => {\n  const previous = new Value(0);\n  const offset = new Value(0);\n\n  return block([\n    cond(\n      eq(state, GestureState.BEGAN),\n      [set(previous, 0)],\n      [set(offset, add(offset, sub(value, previous))), set(previous, value)],\n    ),\n    offset,\n  ]);\n};\n\nexport const decay = (\n  value: Adaptable<number>,\n  state: GestureState,\n  velocity: Adaptable<number>,\n) => {\n  const decayedValue = new Value(0);\n  const offset = new Value(0);\n  const clock = new Clock();\n  const rerunDecaying = new Value(0);\n\n  return block([\n    cond(\n      eq(state, GestureState.END),\n      [\n        set(\n          decayedValue,\n          runDecay(clock, add(value, offset), velocity, rerunDecaying),\n        ),\n      ],\n      [\n        stopClock(clock),\n        cond(eq(state, GestureState.BEGAN), [\n          set(rerunDecaying, 0),\n          set(offset, sub(decayedValue, value)),\n        ]),\n        set(decayedValue, add(value, offset)),\n      ],\n    ),\n    decayedValue,\n  ]);\n};\n\nexport const limit = (\n  value: Adaptable<number>,\n  state: Adaptable<number>,\n  min: number,\n  max: number,\n) => {\n  const offset = new Animated.Value(0);\n  const offsetValue = add(offset, value);\n\n  return block([\n    cond(eq(state, GestureState.BEGAN), [\n      cond(lessThan(offsetValue, min), set(offset, sub(min, value))),\n      cond(greaterThan(offsetValue, max), set(offset, sub(max, value))),\n    ]),\n    cond(\n      lessThan(offsetValue, min),\n      min,\n      cond(greaterThan(offsetValue, max), max, offsetValue),\n    ),\n  ]);\n};\n\nexport const preserveMultiplicativeOffset = (\n  value: Adaptable<number>,\n  state: Adaptable<number>,\n) => {\n  const previous = new Animated.Value(1);\n  const offset = new Animated.Value(1);\n\n  return block([\n    cond(\n      eq(state, GestureState.BEGAN),\n      [set(previous, 1)],\n      [\n        set(offset, multiply(offset, divide(value, previous))),\n        set(previous, value),\n      ],\n    ),\n    offset,\n  ]);\n};\n"]}