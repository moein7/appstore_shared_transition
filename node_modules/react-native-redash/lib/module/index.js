import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import Animated from"react-native-reanimated";import{min}from"./Math";export{default as ReText}from"./ReText";export{default as Interactable}from"./Interactable";export{atan,atan2,min,max,toRad,toDeg}from"./Math";export{default as interpolateColors}from"./Colors";export{runSpring,runTiming,runDecay}from"./AnimationRunners";export{preserveOffset,preserveMultiplicativeOffset,decay,limit}from"./Gesture";var event=Animated.event,cond=Animated.cond,clockRunning=Animated.clockRunning,Value=Animated.Value,add=Animated.add,multiply=Animated.multiply,abs=Animated.abs,interpolate=Animated.interpolate,divide=Animated.divide,sub=Animated.sub,eq=Animated.eq,timing=Animated.timing,Node=Animated.Node;export{timing,clockRunning,add};export var snapPoint=function snapPoint(value,velocity,points){var point=add(value,multiply(0.2,velocity));var diffPoint=function diffPoint(p){return abs(sub(point,p));};var deltas=points.map(function(p){return diffPoint(p);});var minDelta=min.apply(void 0,_toConsumableArray(deltas));return points.reduce(function(acc,p){return cond(eq(diffPoint(p),minDelta),p,acc);},new Value());};export var binaryInterpolation=function binaryInterpolation(value,origin,destination){return interpolate(value,{inputRange:[0,1],outputRange:[origin,destination]});};export var lookup=function lookup(array,index){var notFound=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Value();return array.reduce(function(acc,v,i){return cond(eq(i,index),v,acc);},notFound);};export var translateZ=function translateZ(perspective,z){return{scale:divide(perspective,sub(perspective,z))};};export var onScroll=function onScroll(contentOffset){return event([{nativeEvent:{contentOffset:contentOffset}}],{useNativeDriver:true});};
//# sourceMappingURL=index.js.map