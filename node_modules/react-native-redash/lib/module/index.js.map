{"version":3,"sources":["index.ts"],"names":["Animated","min","default","ReText","Interactable","atan","atan2","max","toRad","toDeg","interpolateColors","runSpring","runTiming","runDecay","preserveOffset","preserveMultiplicativeOffset","decay","limit","event","cond","clockRunning","Value","add","multiply","abs","interpolate","divide","sub","eq","timing","Node","snapPoint","value","velocity","points","point","diffPoint","p","deltas","map","minDelta","reduce","acc","binaryInterpolation","origin","destination","inputRange","outputRange","lookup","array","index","notFound","v","i","translateZ","perspective","z","scale","onScroll","contentOffset","nativeEvent","useNativeDriver"],"mappings":"yEAAA,MAAOA,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,GAAT,KAAoB,QAApB,CAEA,OAASC,OAAO,GAAIC,CAAAA,MAApB,KAAkC,UAAlC,CACA,OAASD,OAAO,GAAIE,CAAAA,YAApB,KAAwC,gBAAxC,CACA,OACEC,IADF,CACQC,KADR,CACeL,GADf,CACoBM,GADpB,CACyBC,KADzB,CACgCC,KADhC,KAEO,QAFP,CAGA,OAASP,OAAO,GAAIQ,CAAAA,iBAApB,KAA6C,UAA7C,CACA,OAASC,SAAT,CAAoBC,SAApB,CAA+BC,QAA/B,KAA+C,oBAA/C,CACA,OACEC,cADF,CACkBC,4BADlB,CACgDC,KADhD,CACuDC,KADvD,KAEO,WAFP,C,GAKEC,CAAAA,K,CAaElB,Q,CAbFkB,K,CACAC,I,CAYEnB,Q,CAZFmB,I,CACAC,Y,CAWEpB,Q,CAXFoB,Y,CACAC,K,CAUErB,Q,CAVFqB,K,CACAC,G,CASEtB,Q,CATFsB,G,CACAC,Q,CAQEvB,Q,CARFuB,Q,CACAC,G,CAOExB,Q,CAPFwB,G,CACAC,W,CAMEzB,Q,CANFyB,W,CACAC,M,CAKE1B,Q,CALF0B,M,CACAC,G,CAIE3B,Q,CAJF2B,G,CACAC,E,CAGE5B,Q,CAHF4B,E,CACAC,M,CAEE7B,Q,CAFF6B,M,CACAC,I,CACE9B,Q,CADF8B,I,CAGF,OAASD,MAAT,CAAiBT,YAAjB,CAA+BE,GAA/B,EAQA,MAAO,IAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAA2BC,QAA3B,CAAwDC,MAAxD,CAA6E,CACpG,GAAMC,CAAAA,KAAK,CAAGb,GAAG,CAACU,KAAD,CAAQT,QAAQ,CAAC,GAAD,CAAMU,QAAN,CAAhB,CAAjB,CACA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,QAA0Bb,CAAAA,GAAG,CAACG,GAAG,CAACQ,KAAD,CAAQE,CAAR,CAAJ,CAA7B,EAAlB,CACA,GAAMC,CAAAA,MAAM,CAAGJ,MAAM,CAACK,GAAP,CAAW,SAAAF,CAAC,QAAID,CAAAA,SAAS,CAACC,CAAD,CAAb,EAAZ,CAAf,CACA,GAAMG,CAAAA,QAAQ,CAAGvC,GAAG,MAAH,2BAAOqC,MAAP,EAAjB,CACA,MAAOJ,CAAAA,MAAM,CAACO,MAAP,CAAc,SAACC,GAAD,CAAYL,CAAZ,QAA0BlB,CAAAA,IAAI,CAACS,EAAE,CAACQ,SAAS,CAACC,CAAD,CAAV,CAAeG,QAAf,CAAH,CAA6BH,CAA7B,CAAgCK,GAAhC,CAA9B,EAAd,CAAkF,GAAIrB,CAAAA,KAAJ,EAAlF,CAAP,CACD,CANM,CAQP,MAAO,IAAMsB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CACjCX,KADiC,CAEjCY,MAFiC,CAGjCC,WAHiC,QAI9BpB,CAAAA,WAAW,CAACO,KAAD,CAAQ,CACtBc,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CADU,CAEtBC,WAAW,CAAE,CAACH,MAAD,CAASC,WAAT,CAFS,CAAR,CAJmB,EAA5B,CASP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CACpBC,KADoB,CAEpBC,KAFoB,KAGpBC,CAAAA,QAHoB,2DAGH,GAAI9B,CAAAA,KAAJ,EAHG,OAIjB4B,CAAAA,KAAK,CAACR,MAAN,CAAa,SAACC,GAAD,CAAMU,CAAN,CAASC,CAAT,QAAelC,CAAAA,IAAI,CAACS,EAAE,CAACyB,CAAD,CAAIH,KAAJ,CAAH,CAAeE,CAAf,CAAkBV,GAAlB,CAAnB,EAAb,CAAwDS,QAAxD,CAJiB,EAAf,CAOP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,WAAD,CAAiCC,CAAjC,QACxB,CAAEC,KAAK,CAAE/B,MAAM,CAAC6B,WAAD,CAAc5B,GAAG,CAAC4B,WAAD,CAAcC,CAAd,CAAjB,CAAf,CADwB,EAAnB,CAKP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,aAAD,QAA2CzC,CAAAA,KAAK,CACtE,CACE,CACE0C,WAAW,CAAE,CACXD,aAAa,CAAbA,aADW,CADf,CADF,CADsE,CAQtE,CAAEE,eAAe,CAAE,IAAnB,CARsE,CAAhD,EAAjB","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { min } from \"./Math\";\n\nexport { default as ReText } from \"./ReText\";\nexport { default as Interactable } from \"./Interactable\";\nexport {\n  atan, atan2, min, max, toRad, toDeg,\n} from \"./Math\";\nexport { default as interpolateColors } from \"./Colors\";\nexport { runSpring, runTiming, runDecay } from \"./AnimationRunners\";\nexport {\n  preserveOffset, preserveMultiplicativeOffset, decay, limit,\n} from \"./Gesture\";\n\nconst {\n  event,\n  cond,\n  clockRunning,\n  Value,\n  add,\n  multiply,\n  abs,\n  interpolate,\n  divide,\n  sub,\n  eq,\n  timing,\n  Node,\n} = Animated;\n\nexport { timing, clockRunning, add };\n\nexport type TimingConfig = Parameters<typeof timing>[1];\nexport type Clock = Parameters<typeof clockRunning>[0];\nexport type Node = ReturnType<typeof add>;\nexport type Adaptable<T> = Node | T;\n\n// ## Animations\nexport const snapPoint = (value: Adaptable<number>, velocity: Adaptable<number>, points: number[]) => {\n  const point = add(value, multiply(0.2, velocity));\n  const diffPoint = (p: Adaptable<number>) => abs(sub(point, p));\n  const deltas = points.map(p => diffPoint(p));\n  const minDelta = min(...deltas);\n  return points.reduce((acc: Node, p: number) => cond(eq(diffPoint(p), minDelta), p, acc), new Value());\n};\n\nexport const binaryInterpolation = (\n  value: Adaptable<number>,\n  origin: Adaptable<number>,\n  destination: Adaptable<number>,\n) => interpolate(value, {\n  inputRange: [0, 1],\n  outputRange: [origin, destination],\n});\n\nexport const lookup = (\n  array: Adaptable<number>[],\n  index: Adaptable<number>,\n  notFound: Node = new Value(),\n) => array.reduce((acc, v, i) => cond(eq(i, index), v, acc), notFound);\n\n// ## Transformations\nexport const translateZ = (perspective: Adaptable<number>, z: Adaptable<number>) => (\n  { scale: divide(perspective, sub(perspective, z)) }\n);\n\n// ## Gestures\nexport const onScroll = (contentOffset: { x?: Node, y?: Node }) => event(\n  [\n    {\n      nativeEvent: {\n        contentOffset,\n      },\n    },\n  ],\n  { useNativeDriver: true },\n);\n"]}