{"version":3,"sources":["ReText.tsx"],"names":["React","TextInput","Animated","Value","concat","AnimatedTextInput","createAnimatedComponent","props","style","text"],"mappings":"0KAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAAqC,cAArC,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,GAEQC,CAAAA,K,CAAkBD,Q,CAAlBC,K,CAAOC,M,CAAWF,Q,CAAXE,M,CACf,GAAMC,CAAAA,iBAAiB,CAAGH,QAAQ,CAACI,uBAAT,CAAiCL,SAAjC,CAA1B,CAEA,OAASE,KAAT,EAGA,OAASC,MAAT,EAQA,eAAe,SAACG,KAAD,CAAsB,iCACTC,KAAK,CAAE,EADE,EACKD,KADL,EAC3BE,IAD2B,cAC3BA,IAD2B,CACrBD,KADqB,cACrBA,KADqB,CAEnC,MACE,qBAAC,iBAAD,WACE,qBAAqB,CAAC,aADxB,CAEE,QAAQ,CAAE,KAFZ,EAGM,CAAEC,IAAI,CAAJA,IAAF,CAAQD,KAAK,CAALA,KAAR,CAHN,mDADF,CAOD,CATD","sourcesContent":["import * as React from \"react\";\nimport { TextInput, TextStyle } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\n\nconst { Value, concat } = Animated;\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nexport { Value };\nexport type Value = typeof Value;\n\nexport { concat };\nexport type Node = ReturnType<typeof concat>;\n\ninterface TextProps {\n  text: Node;\n  style?: TextStyle;\n}\n\nexport default (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      {...{ text, style }}\n    />\n  );\n};\n"]}