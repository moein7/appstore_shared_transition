import Animated from "react-native-reanimated";
declare const timing: typeof Animated.timing, spring: typeof Animated.spring, clockRunning: typeof Animated.clockRunning, add: (a: Animated.Adaptable<number>, b: Animated.Adaptable<number>, ...others: Animated.Adaptable<number>[]) => Animated.Node<number>;
export { timing, spring, clockRunning, add, };
export declare type SpringConfig = Parameters<typeof spring>[1];
export declare type TimingConfig = Parameters<typeof timing>[1];
export declare type Clock = Parameters<typeof clockRunning>[0];
export declare type Node = ReturnType<typeof add>;
export declare type Adaptable<T> = Node | T;
export declare function runDecay(clock: Clock, value: Adaptable<number>, velocity: Adaptable<number>, rerunDecaying: any): Animated.Node<number>[];
export declare function runSpring(clock: Clock, value: Adaptable<number>, dest: Adaptable<number>, config?: SpringConfig): Animated.Node<number>;
export declare function runTiming(clock: Clock, value: Adaptable<any>, config: TimingConfig): Animated.Node<number>;
